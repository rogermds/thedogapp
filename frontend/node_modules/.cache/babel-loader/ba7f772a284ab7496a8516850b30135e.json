{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Desktop\\\\Workspace\\\\React\\\\Dog Certo\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"./components/Select\";\nimport Card from \"./components/Card\";\nimport getDog from \"./helpers/getDog\";\nimport getBreeds from \"./helpers/getBreeds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialDog = {\n  image: \"https://cdn2.thedogapi.com/images/BJa4kxc4X.jpg\",\n  breed: {\n    id: 1,\n    name: \"Affenpinscher\"\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [dog, setDog] = useState(initialDog);\n  useEffect(() => {\n    updateDog(0);\n  }, []);\n\n  const updateDog = breedId => {\n    getDog(breedId).then(newDog => {\n      setDog(newDog);\n    });\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(25);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage; // const currentPosts = getBreeds.slice(indexOfFirstPost, indexOfLastPost);\n\n  console.log(getBreeds.breed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      updateDog: updateDog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      dog: dog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"cBw2DMyQcvwye5dMZkV4fHoX4j4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Roger/Desktop/Workspace/React/Dog Certo/frontend/src/App.js"],"names":["React","useState","useEffect","Select","Card","getDog","getBreeds","initialDog","image","breed","id","name","App","dog","setDog","updateDog","breedId","then","newDog","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAGA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,KAAK,EAAE,iDADW;AAElBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,EAAE,EAAE,CADE;AAENC,IAAAA,IAAI,EAAE;AAFA;AAFW,CAAnB;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAACM,UAAD,CAA9B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,SAAS,CAAC,CAAD,CAAT;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAIC,OAAD,IAAa;AAC9BX,IAAAA,MAAM,CAACW,OAAD,CAAN,CAAgBC,IAAhB,CAAsBC,MAAD,IAAY;AAChCJ,MAAAA,MAAM,CAACI,MAAD,CAAN;AACA,KAFD;AAGA,GAJD;;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMsB,eAAe,GAAGJ,WAAW,GAAGE,YAAtC;AACA,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C,CAjBc,CAkBd;;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAS,CAACG,KAAtB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEM;AAAnB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEF;AAAX;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GA5BQD,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"./components/Select\";\nimport Card from \"./components/Card\";\nimport getDog from \"./helpers/getDog\";\nimport getBreeds from \"./helpers/getBreeds\";\n\n\nconst initialDog = {\n\timage: \"https://cdn2.thedogapi.com/images/BJa4kxc4X.jpg\",\n\tbreed: {\n\t\tid: 1,\n\t\tname: \"Affenpinscher\",\n\t},\n};\n\nfunction App() {\n\tconst [dog, setDog] = useState(initialDog);\n\n\tuseEffect(() => {\n\t\tupdateDog(0);\n\t}, []);\n\n\tconst updateDog = (breedId) => {\n\t\tgetDog(breedId).then((newDog) => {\n\t\t\tsetDog(newDog);\n\t\t});\n\t};\n\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage, setPostsPerPage] = useState(25);\n\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\t// const currentPosts = getBreeds.slice(indexOfFirstPost, indexOfLastPost);\n\n\tconsole.log(getBreeds.breed);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Select updateDog={updateDog} />\n\t\t\t<Card dog={dog} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}