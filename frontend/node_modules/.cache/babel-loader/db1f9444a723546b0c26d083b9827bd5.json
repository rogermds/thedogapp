{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Desktop\\\\Workspace\\\\React\\\\Dog Certo\\\\frontend\\\\src\\\\components\\\\Select.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport getBreeds from \"../helpers/getBreeds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialBreeds = [{\n  id: 1,\n  name: \"Boxer\"\n}, {\n  id: 2,\n  name: \"Husky\"\n}, {\n  id: 3,\n  name: \"Pintscher\"\n}];\n\nconst Select = () => {\n  _s();\n\n  const [breeds, setBreeds] = useState(initialBreeds);\n  useEffect(() => {\n    updateBreeds();\n  }, []);\n\n  const updateBreeds = () => {\n    getBreeds().then(newBreeds => {\n      setBreeds(newBreeds);\n    }).catch(console.log(\"Erro\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: () => alert('change'),\n      children: breeds.map(breed => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: breed.id,\n        children: breed.name\n      }, breed.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: breeds.url_image,\n        alt: breeds.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"dog name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Select, \"8sJwjkoYMaxURzBD/0yJA/LN078=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["C:/Users/Roger/Desktop/Workspace/React/Dog Certo/frontend/src/components/Select.js"],"names":["React","useState","useEffect","getBreeds","initialBreeds","id","name","Select","breeds","setBreeds","updateBreeds","then","newBreeds","catch","console","log","alert","map","breed","url_image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE;AAFP,CADqB,EAKrB;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE;AAFP,CALqB,EASrB;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE;AAFP,CATqB,CAAtB;;AAeA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACG,aAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACvBP,IAAAA,SAAS,GACRQ,IADD,CACOC,SAAD,IAAe;AACjBH,MAAAA,SAAS,CAACG,SAAD,CAAT;AACH,KAHD,EAICC,KAJD,CAKIC,OAAO,CAACC,GAAR,CAAY,MAAZ,CALJ;AAOH,GARD;;AAUH,sBACO;AAAA,4BACA;AAAQ,MAAA,QAAQ,EAAE,MAAMC,KAAK,CAAC,QAAD,CAA7B;AAAA,gBACJR,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACJ;AAAQ,QAAA,KAAK,EAAEA,KAAK,CAACb,EAArB;AAAA,kBAAyCa,KAAK,CAACZ;AAA/C,SAA8BY,KAAK,CAACb,EAApC;AAAA;AAAA;AAAA;AAAA,cADZ;AADI;AAAA;AAAA;AAAA;AAAA,YADA,eAMA;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEG,MAAM,CAACW,SAAjB;AAA4B,QAAA,GAAG,EAAEX,MAAM,CAACF;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADP;AAaA,CA9BD;;GAAMC,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport getBreeds from \"../helpers/getBreeds\";\r\n\r\nconst initialBreeds = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: \"Boxer\",\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: \"Husky\",\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: \"Pintscher\",\r\n\t},\r\n];\r\n\r\nconst Select = () => {\r\n    const [breeds, setBreeds] = useState(initialBreeds);\r\n\r\n    useEffect(() => {\r\n        updateBreeds();\r\n    }, []);\r\n\r\n    const updateBreeds = () => {\r\n        getBreeds()\r\n        .then((newBreeds) => {\r\n            setBreeds(newBreeds)\r\n        })\r\n        .catch(\r\n            console.log(\"Erro\")\r\n        )\r\n    }\r\n\r\n\treturn (\r\n        <>\r\n        <select onChange={() => alert('change')}>\r\n\t\t\t{breeds.map(breed => (\r\n                <option value={breed.id} key={breed.id}>{breed.name}</option>\r\n            ))}\r\n\t\t</select>\r\n        <div>\r\n            <img src={breeds.url_image} alt={breeds.name} />\r\n            <p>dog name</p>\r\n\t    </div>\r\n        </>\r\n\t);\r\n};\r\n\r\nexport default Select;\r\n"]},"metadata":{},"sourceType":"module"}